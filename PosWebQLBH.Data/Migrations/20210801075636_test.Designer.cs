// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PosWebQLBH.Data.Entities;

namespace PosWebQLBH.Data.Migrations
{
    [DbContext(typeof(DbQLBHContext))]
    [Migration("20210801075636_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Category", b =>
                {
                    b.Property<string>("IdCategory")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Category");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Category");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdCategory")
                        .HasName("PK__Category__6DB3A68A23DB85E7");

                    b.HasIndex(new[] { "IdCategory" }, "UQ__Category__6DB3A68B2DE2309C")
                        .IsUnique();

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Customer", b =>
                {
                    b.Property<long>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_Customer")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameCustomer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Customer");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdCustomer")
                        .HasName("PK__Customer__2D8FDE5FC302B124");

                    b.HasIndex(new[] { "IdCustomer" }, "UQ__Customer__2D8FDE5E1AA3C495")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Employee", b =>
                {
                    b.Property<string>("IdEmployee")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Employee");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("IdRole")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Role");

                    b.Property<string>("NameEmployee")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Employee");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdEmployee")
                        .HasName("PK__Employee__D9EE4F3660C4DC47");

                    b.HasIndex("IdRole");

                    b.HasIndex(new[] { "Email" }, "UQ__Employee__A9D10534CDAC7A07")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex(new[] { "IdEmployee" }, "UQ__Employee__D9EE4F37E4C83A87")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.FunctionList", b =>
                {
                    b.Property<string>("IdFunction")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Function");

                    b.Property<string>("NameFunction")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Function");

                    b.HasKey("IdFunction");

                    b.ToTable("FunctionList");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.History", b =>
                {
                    b.Property<long>("IdHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_History")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Discount")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength(true);

                    b.Property<long>("IdCustomer")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_Customer");

                    b.Property<string>("IdEmployee")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Employee");

                    b.Property<string>("IdProduct")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Product");

                    b.Property<long>("IdPurchaseOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_PurchaseOrder");

                    b.Property<long>("IdSellOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_SellOrder");

                    b.Property<string>("IdSuppliers")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Suppliers");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("PriceAfterDiscount")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength(true);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TotalAmount")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength(true);

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdHistory")
                        .HasName("PK__History__F51C56DC034F2B20");

                    b.ToTable("History");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Inventory", b =>
                {
                    b.Property<long>("IdInventory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_Inventory")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IdProduct")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Product");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdInventory")
                        .HasName("PK__Inventor__2210F49E4001C41D");

                    b.HasIndex("IdProduct");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Product", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Product");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("IdCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Category");

                    b.Property<string>("IdUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Unit");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Product");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("IdProduct")
                        .HasName("PK__Products__522DE496A4887A31");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdUnit");

                    b.HasIndex(new[] { "IdProduct" }, "UQ__Products__522DE497C6210C13")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.PurchaseOrder", b =>
                {
                    b.Property<long>("IdPurchaseOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_PurchaseOrder")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("IdEmployee")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Employee");

                    b.Property<string>("IdProduct")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Product");

                    b.Property<string>("IdSupplier")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Supplier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("PriceAfterDiscount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdPurchaseOrder")
                        .HasName("PK__Purchase__F1DAA6381B798B2D");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdSupplier");

                    b.HasIndex(new[] { "IdPurchaseOrder" }, "UQ__Purchase__390E8B9067C76FF4")
                        .IsUnique();

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Role", b =>
                {
                    b.Property<string>("IdRole")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Role");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FeatureList")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Feature_List");

                    b.Property<string>("IdFunction")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Function");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Role");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdRole")
                        .HasName("PK__Roles__43DCD32D3B76F765");

                    b.HasIndex("IdFunction");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.SellOrder", b =>
                {
                    b.Property<long>("IdSellOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_SellOrder")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<long>("IdCustomer")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_Customer");

                    b.Property<string>("IdEmployee")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Employee");

                    b.Property<string>("IdProduct")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Product");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("PriceAfterDiscount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdSellOrder")
                        .HasName("PK__SellOrde__9336A44AE17C6FD3");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdProduct");

                    b.ToTable("SellOrder");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Supplier", b =>
                {
                    b.Property<string>("IdSupplier")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Supplier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameSupplier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Supplier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Representative")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdSupplier")
                        .HasName("PK__Supplier__3D9EE7AC0B95603E");

                    b.HasIndex(new[] { "IdSupplier" }, "UQ__Supplier__408B709548A2BC3A")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Unit", b =>
                {
                    b.Property<string>("IdUnit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ID_Unit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_Unit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdUnit")
                        .HasName("PK__Unit__EB4517D39276DF6A");

                    b.HasIndex(new[] { "IdUnit" }, "UQ__Unit__EB4517D25DF98ADB")
                        .IsUnique();

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("eShopSolution.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("eShopSolution.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Employee", b =>
                {
                    b.HasOne("PosWebQLBH.Data.Entities.Role", "IdRoleNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdRole")
                        .HasConstraintName("FK_Employees_Roles")
                        .IsRequired();

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Inventory", b =>
                {
                    b.HasOne("PosWebQLBH.Data.Entities.Product", "IdProductNavigation")
                        .WithMany("Inventories")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_Inventory_Products")
                        .IsRequired();

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Product", b =>
                {
                    b.HasOne("PosWebQLBH.Data.Entities.Category", "IdCategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK_Products_Category")
                        .IsRequired();

                    b.HasOne("PosWebQLBH.Data.Entities.Unit", "IdUnitNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdUnit")
                        .HasConstraintName("FK_Products_Unit")
                        .IsRequired();

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdUnitNavigation");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("PosWebQLBH.Data.Entities.Employee", "IdEmployeeNavigation")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("FK_PurchaseOrder_Employees")
                        .IsRequired();

                    b.HasOne("PosWebQLBH.Data.Entities.Product", "IdProductNavigation")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_PurchaseOrder_Products")
                        .IsRequired();

                    b.HasOne("PosWebQLBH.Data.Entities.Supplier", "IdSupplierNavigation")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("IdSupplier")
                        .HasConstraintName("FK_PurchaseOrder_Suppliers")
                        .IsRequired();

                    b.Navigation("IdEmployeeNavigation");

                    b.Navigation("IdProductNavigation");

                    b.Navigation("IdSupplierNavigation");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Role", b =>
                {
                    b.HasOne("PosWebQLBH.Data.Entities.FunctionList", "IdFunctionNavigation")
                        .WithMany("Roles")
                        .HasForeignKey("IdFunction")
                        .HasConstraintName("FK_Roles_FunctionList")
                        .IsRequired();

                    b.Navigation("IdFunctionNavigation");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.SellOrder", b =>
                {
                    b.HasOne("PosWebQLBH.Data.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("SellOrders")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("FK_SellOrder_Customers")
                        .IsRequired();

                    b.HasOne("PosWebQLBH.Data.Entities.Employee", "IdEmployeeNavigation")
                        .WithMany("SellOrders")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("FK_SellOrder_Employees")
                        .IsRequired();

                    b.HasOne("PosWebQLBH.Data.Entities.Product", "IdProductNavigation")
                        .WithMany("SellOrders")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK_SellOrder_Products")
                        .IsRequired();

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdEmployeeNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Customer", b =>
                {
                    b.Navigation("SellOrders");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Employee", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("SellOrders");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.FunctionList", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("SellOrders");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("PosWebQLBH.Data.Entities.Unit", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
